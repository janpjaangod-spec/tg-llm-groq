from aiogram import Router, F
from aiogram.types import Message, PhotoSize
import random
import time
import base64
import aiohttp
import tempfile
import os

from bot_groq.config.settings import settings
from bot_groq.services.database import db_add_chat_message, db_load_person, log_chat_event
from bot_groq.services.llm import llm_vision, llm_text
from bot_groq.core.profiles import update_person_profile

router = Router()

async def download_photo(photo: PhotoSize, bot) -> str:
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–æ—Ç–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª
        file = await bot.get_file(photo.file_id)
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        temp_file = tempfile.NamedTemporaryFile(delete=False, suffix='.jpg')
        temp_path = temp_file.name
        temp_file.close()
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_url = f"https://api.telegram.org/file/bot{bot.token}/{file.file_path}"
        
        async with aiohttp.ClientSession() as session:
            async with session.get(file_url) as response:
                if response.status == 200:
                    with open(temp_path, 'wb') as f:
                        f.write(await response.read())
                    return temp_path
                else:
                    os.unlink(temp_path)
                    return None
                    
    except Exception as e:
        print(f"Error downloading photo: {e}")
        return None

def cleanup_temp_file(file_path: str):
    """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª."""
    try:
        if file_path and os.path.exists(file_path):
            os.unlink(file_path)
    except Exception:
        pass

@router.message(F.photo)
async def handle_photo(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É
        log_chat_event(
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username or "",
            text=f"[–§–û–¢–û] {message.caption or ''}",
            timestamp=time.time(),
            is_bot=False
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot_info = await message.bot.get_me()
        update_person_profile(message, bot_info.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
        system_profile = db_load_person(message.chat.id, 0) or {}
        bot_mode = system_profile.get("bot_mode", "toxic")
        
        if bot_mode == "silent":
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ
        should_analyze = False
        
        # –ü—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –±–æ—Ç—É
        if message.caption and f"@{bot_info.username}" in message.caption.lower():
            should_analyze = True
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –ø–æ–¥–ø–∏—Å–∏
        elif message.caption and any(keyword.lower() in message.caption.lower() 
                                   for keyword in settings.name_keywords_list):
            should_analyze = True
        
        # –°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (–º–µ–Ω—å—à–∏–π —à–∞–Ω—Å —á–µ–º –¥–ª—è —Ç–µ–∫—Å—Ç–∞)
        elif random.randint(1, 100) <= (settings.response_chance // 2):
            should_analyze = True
        
        if not should_analyze:
            return
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ
        photo = message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        temp_file_path = await download_photo(photo, message.bot)
        
        if not temp_file_path:
            await message.reply("–ù–µ –º–æ–≥—É —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
            return
        
        try:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            vision_prompt = "–û–ø–∏—à–∏ —á—Ç–æ –≤–∏–¥–∏—à—å –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤ —Ç–æ–∫—Å–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ. –ë—É–¥—å —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–º –∏ –∫–æ–ª–∫–∏–º."
            
            if message.caption:
                vision_prompt += f" –ü–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ: '{message.caption}'"
            
            # llm_vision —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏ –∂–¥—ë—Ç system_prompt, image_path, user_prompt
            response = llm_vision(
                system_prompt="–¢—ã —Ç–æ–∫—Å–∏—á–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—à—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–∏—à–∏ –ø–æ-—Ä—É—Å—Å–∫–∏, –∫–æ–ª–∫–æ.",
                image_url=temp_file_path,
                user_prompt=vision_prompt
            )
            
            if response:
                await message.reply(response)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
                log_chat_event(
                    chat_id=message.chat.id,
                    user_id=bot_info.id,
                    username=bot_info.username,
                    text=response,
                    timestamp=time.time(),
                    is_bot=True
                )
            else:
                # Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ñ–æ—Ç–æ
                photo_responses = [
                    "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ñ–æ—Ç–æ. –ß—Ç–æ —Ö–æ—Ç–µ–ª –ø–æ–∫–∞–∑–∞—Ç—å?",
                    "–í–∏–∂—É –∫–∞—Ä—Ç–∏–Ω–∫—É, –Ω–æ —á—Ç–æ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –æ–∑–Ω–∞—á–∞—Ç—å?",
                    "–§–æ—Ç–∫–∞ –∑–∞—á–µ—Ç–Ω–∞—è, –Ω–æ —Å–º—ã—Å–ª?",
                    "–ò —á—Ç–æ –º–Ω–µ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å?",
                    "–ö—Ä–∞—Å–∏–≤–æ. –ò —á—Ç–æ –¥–∞–ª—å—à–µ?"
                ]
                await message.reply(random.choice(photo_responses))
                
        finally:
            cleanup_temp_file(temp_file_path)
    
    except Exception as e:
        print(f"Error handling photo: {e}")

@router.message(F.sticker)
async def handle_sticker(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        log_chat_event(
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username or "",
            text=f"[–°–¢–ò–ö–ï–†] {message.sticker.emoji if message.sticker.emoji else ''}",
            timestamp=time.time(),
            is_bot=False
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
        bot_info = await message.bot.get_me()
        update_person_profile(message, bot_info.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
        system_profile = db_load_person(message.chat.id, 0) or {}
        bot_mode = system_profile.get("bot_mode", "toxic")
        
        if bot_mode == "silent":
            return
        
        # –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ —Å—Ç–∏–∫–µ—Ä—ã —Ä–µ–∂–µ
        if random.randint(1, 100) <= 15:  # 15% —à–∞–Ω—Å
            
            emoji = message.sticker.emoji or "ü§î"
            sticker_set = message.sticker.set_name or "unknown"
            
            try:
                sticker_prompt = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Ç–∏–∫–µ—Ä —Å —ç–º–æ–¥–∑–∏ {emoji}. –ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —ç—Ç–æ –≤ —Ç–æ–∫—Å–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ."
                response = await llm_text(sticker_prompt, max_tokens=0)
                
                if response:
                    await message.reply(response)
                else:
                    # Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å—Ç–∏–∫–µ—Ä—ã
                    sticker_responses = [
                        "–°—Ç–∏–∫–µ—Ä –≥–æ–≤–æ—Ä–∏—Ç —Å–∞–º –∑–∞ —Å–µ–±—è.",
                        "–ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å—Ç–æ–∏—Ç —Ç—ã—Å—è—á–∏ —Å–ª–æ–≤. –ù–æ –Ω–µ —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä.",
                        "–≠–º–æ—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å—Ç–∏–∫–µ—Ä—ã? –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ.",
                        "–ü–æ–Ω—è—Ç–Ω–æ, –±–µ–∑ —Å–ª–æ–≤.",
                        f"–•–æ—Ä–æ—à–∏–π —Å—Ç–∏–∫–µ—Ä —Å {emoji}"
                    ]
                    await message.reply(random.choice(sticker_responses))
                    
            except Exception:
                pass  # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫
    
    except Exception as e:
        print(f"Error handling sticker: {e}")

@router.message(F.animation)
async def handle_gif(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ GIF-–∞–Ω–∏–º–∞—Ü–∏–π."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        log_chat_event(
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username or "",
            text=f"[GIF] {message.caption or ''}",
            timestamp=time.time(),
            is_bot=False
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot_info = await message.bot.get_me()
        update_person_profile(message, bot_info.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
        system_profile = db_load_person(message.chat.id, 0) or {}
        bot_mode = system_profile.get("bot_mode", "toxic")
        
        if bot_mode == "silent":
            return
        
        # –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ GIF –µ—â–µ —Ä–µ–∂–µ
        if random.randint(1, 100) <= 10:  # 10% —à–∞–Ω—Å
            
            try:
                gif_prompt = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª GIF-–∞–Ω–∏–º–∞—Ü–∏—é"
                if message.caption:
                    gif_prompt += f" —Å –ø–æ–¥–ø–∏—Å—å—é '{message.caption}'"
                gif_prompt += ". –ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —ç—Ç–æ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ."
                
                response = await llm_text(gif_prompt, max_tokens=0)
                
                if response:
                    await message.reply(response)
                else:
                    # Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ GIF
                    gif_responses = [
                        "–ê–Ω–∏–º–∞—Ü–∏—è –∑–∞—á–µ—Ç–Ω–∞—è.",
                        "GIF –≤ —Ç–µ–º—É.",
                        "–î–≤–∏–∂—É—â–∏–µ—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
                        "–•–æ—Ä–æ—à–∞—è —Ä–µ–∞–∫—Ü–∏—è –≤ GIF —Ñ–æ—Ä–º–∞—Ç–µ.",
                        "–ü–æ–Ω—è—Ç–Ω–æ –±–µ–∑ —Å–ª–æ–≤."
                    ]
                    await message.reply(random.choice(gif_responses))
                    
            except Exception:
                pass
    
    except Exception as e:
        print(f"Error handling GIF: {e}")

@router.message(F.video)
async def handle_video(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        log_chat_event(
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username or "",
            text=f"[–í–ò–î–ï–û] {message.caption or ''}",
            timestamp=time.time(),
            is_bot=False
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot_info = await message.bot.get_me()
        update_person_profile(message, bot_info.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
        system_profile = db_load_person(message.chat.id, 0) or {}
        bot_mode = system_profile.get("bot_mode", "toxic")
        
        if bot_mode == "silent":
            return
        
        # –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –≤–∏–¥–µ–æ —Ä–µ–¥–∫–æ
        if random.randint(1, 100) <= 8:  # 8% —à–∞–Ω—Å
            
            try:
                video_prompt = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∏–¥–µ–æ"
                if message.caption:
                    video_prompt += f" —Å –ø–æ–¥–ø–∏—Å—å—é '{message.caption}'"
                video_prompt += ". –ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —ç—Ç–æ –≤ —Ç–æ–∫—Å–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ."
                
                response = await llm_text(video_prompt, max_tokens=80)
                
                if response:
                    await message.reply(response) 
                else:
                    # Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∏–¥–µ–æ
                    video_responses = [
                        "–í–∏–¥–æ—Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π.",
                        "–ö–∏–Ω–æ —Å–º–æ—Ç—Ä–∏–º?",
                        "–ß—Ç–æ –∑–∞ —Ñ–∏–ª—å–º –ø—Ä–∏—Å–ª–∞–ª?",
                        "–í–∏–¥–µ–æ –≤ —Ç–µ–º—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫?",
                        "–ù–∞–¥–æ –±—É–¥–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –±—É–¥–µ—Ç."
                    ]
                    await message.reply(random.choice(video_responses))
                    
            except Exception:
                pass
    
    except Exception as e:
        print(f"Error handling video: {e}")

@router.message(F.voice)
async def handle_voice(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        log_chat_event(
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username or "",
            text=f"[–ì–û–õ–û–°–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï] –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {message.voice.duration}—Å",
            timestamp=time.time(),
            is_bot=False
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot_info = await message.bot.get_me()
        update_person_profile(message, bot_info.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
        system_profile = db_load_person(message.chat.id, 0) or {}
        bot_mode = system_profile.get("bot_mode", "toxic")
        
        if bot_mode == "silent":
            return
        
        # –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –≤–æ–π—Å—ã —Ä–µ–¥–∫–æ
        if random.randint(1, 100) <= 12:  # 12% —à–∞–Ω—Å
            
            duration = message.voice.duration
            
            try:
                voice_prompt = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é {duration} —Å–µ–∫—É–Ω–¥. –ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —ç—Ç–æ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–æ."
                response = await llm_text(voice_prompt, max_tokens=80)
                
                if response:
                    await message.reply(response)
                else:
                    # Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–π—Å—ã
                    if duration < 10:
                        voice_responses = [
                            "–ö–æ—Ä–æ—Ç–∫–∏–π –≤–æ–π—Å - —Ö–æ—Ä–æ—à–æ, –Ω–µ –ª—é–±–ª—é –¥–ª–∏–Ω–Ω—ã–µ —Ä–µ—á–∏.",
                            "–ë—ã—Å—Ç—Ä–æ –∏ –ø–æ –¥–µ–ª—É.",
                            "–ö–æ—Ä–æ—Ç–∫–æ –∏ —è—Å–Ω–æ."
                        ]
                    elif duration > 60:
                        voice_responses = [
                            "–î–æ–ª–≥–æ –≥–æ–≤–æ—Ä–∏—à—å. –ù–∞–¥–µ—é—Å—å, —Ç–∞–º —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ.",
                            "–¶–µ–ª–∞—è –ª–µ–∫—Ü–∏—è –≤ –≤–æ–π—Å–µ.",
                            "–ú–Ω–æ–≥–æ —Å–ª–æ–≤. –ù–∞–¥–æ –±—É–¥–µ—Ç –ø–æ—Å–ª—É—à–∞—Ç—å –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –±—É–¥–µ—Ç."
                        ]
                    else:
                        voice_responses = [
                            "–í–æ–π—Å –ø—Ä–∏–Ω—è—Ç.",
                            "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ.",
                            "–ë—É–¥—É —Å–ª—É—à–∞—Ç—å.",
                            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ —Ç–∞–º –Ω–∞–≥–æ–≤–æ—Ä–∏–ª."
                        ]
                    
                    await message.reply(random.choice(voice_responses))
                    
            except Exception:
                pass
    
    except Exception as e:
        print(f"Error handling voice: {e}")

@router.message(F.document)
async def handle_document(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤."""
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        doc_name = message.document.file_name or "unknown"
        doc_size = message.document.file_size or 0
        
        log_chat_event(
            chat_id=message.chat.id,
            user_id=message.from_user.id,
            username=message.from_user.username or "",
            text=f"[–î–û–ö–£–ú–ï–ù–¢] {doc_name} ({doc_size} –±–∞–π—Ç) {message.caption or ''}",
            timestamp=time.time(),
            is_bot=False
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot_info = await message.bot.get_me()
        update_person_profile(message, bot_info.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
        system_profile = db_load_person(message.chat.id, 0) or {}
        bot_mode = system_profile.get("bot_mode", "toxic")
        
        if bot_mode == "silent":
            return
        
        # –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ä–µ–¥–∫–æ
        if random.randint(1, 100) <= 5:  # 5% —à–∞–Ω—Å
            
            try:
                doc_prompt = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç '{doc_name}'"
                if message.caption:
                    doc_prompt += f" —Å –ø–æ–¥–ø–∏—Å—å—é '{message.caption}'"
                doc_prompt += ". –ü—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —ç—Ç–æ –≤ —Ç–æ–∫—Å–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ."
                
                response = await llm_text(doc_prompt, max_tokens=80)
                
                if response:
                    await message.reply(response)
                else:
                    # Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã
                    doc_responses = [
                        "–î–æ–∫—É–º–µ–Ω—Ç–∏–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π.",
                        "–ß—Ç–æ –∑–∞ —Ñ–∞–π–ª –ø—Ä–∏—Å–ª–∞–ª?",
                        "–ë—É–¥—É –∏–∑—É—á–∞—Ç—å –Ω–∞ –¥–æ—Å—É–≥–µ.",
                        "–î–æ–∫—É–º–µ–Ω—Ç—ã - —ç—Ç–æ —Å–µ—Ä—å–µ–∑–Ω–æ.",
                        "–ù–∞–¥–µ—é—Å—å, —Ç–∞–º —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ."
                    ]
                    await message.reply(random.choice(doc_responses))
                    
            except Exception:
                pass
    
    except Exception as e:
        print(f"Error handling document: {e}")
