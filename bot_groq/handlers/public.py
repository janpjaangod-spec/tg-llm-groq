from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
import random
import time

from bot_groq.config.settings import settings
from bot_groq.services.database import db_load_person, db_save_person, db_get_chat_tail
from bot_groq.services.llm import llm_text
from bot_groq.core.profiles import get_user_profile_for_display

router = Router()

@router.message(Command("start", "help"))
async def cmd_help(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º."""
    if message.chat.type == "private":
        # –í –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ - –ø–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
        text = (
            "ü§ñ <b>–õ–µ—Ö–∞ - —Ç–≤–æ–π —Ç–æ–∫—Å–∏—á–Ω—ã–π –¥—Ä—É–≥</b>\n\n"
            "–Ø —É–º–µ—é:\n"
            "‚Ä¢ –û–±—â–∞—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö\n"
            "‚Ä¢ –ó–∞–ø–æ–º–∏–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
            "‚Ä¢ –ë—ã—Ç—å —Ç–æ–∫—Å–∏—á–Ω—ã–º (–Ω–æ –≤ –º–µ—Ä—É)\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"  
            "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ\n"
            "/forget - –∑–∞–±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–±–µ\n\n"
            "–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É –∏ —è –Ω–∞—á–Ω—É –æ–±—â–∞—Ç—å—Å—è!"
        )
    else:
        # –í –≥—Ä—É–ø–ø–µ - –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞
        responses = [
            "–ß—ë –Ω–∞–¥–æ? –Ø —Ç—É—Ç –æ–±—â–∞—é—Å—å —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º–∏ –ª—é–¥—å–º–∏.",
            "–°–ø—Ä–∞–≤–∫–∞? –õ—É—á—à–µ —Å–ø—Ä–æ—Å–∏ —á—Ç–æ-—Ç–æ –ø–æ –¥–µ–ª—É.",
            "–ö–æ–º–∞–Ω–¥—ã? –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, —è –ø–æ–π–º—É.",
            "–ü–æ–º–æ—â—å? –°–∞–º —Å–µ–±–µ –ø–æ–º–æ–≥–∏ —Å–Ω–∞—á–∞–ª–∞."
        ]
        text = random.choice(responses)
    
    await message.reply(text, parse_mode="HTML" if message.chat.type == "private" else None)

@router.message(Command("info"))
async def cmd_info(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ."""
    responses = [
        "–Ø –õ–µ—Ö–∞, –º–µ—Å—Ç–Ω—ã–π —Ç–æ–∫—Å–∏—á–Ω—ã–π –±–æ—Ç. –õ—é–±–ª—é –ø–æ—Å–ø–æ—Ä–∏—Ç—å –∏ –ø–æ–¥–∫–æ–ª–æ—Ç—å.",
        "–õ–µ—Ö–∞ –Ω–∞ —Å–≤—è–∑–∏. –ì–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å –≤—Å—ë —á—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é - —è –Ω–µ —Å–∞—Ö–∞—Ä–Ω—ã–π.",
        "–ë–æ—Ç –õ–µ—Ö–∞, –≤–µ—Ä—Å–∏—è '–∑–ª–æ–π —è–∑—ã–∫'. –û–±—â–∞—é—Å—å –∫–∞–∫ –µ—Å—Ç—å, –±–µ–∑ –ø—Ä–∏–∫—Ä–∞—Å.",
        "–¢–æ–∫—Å–∏—á–Ω—ã–π –õ–µ—Ö–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º. –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –ø–æ–ª–∏—Ç–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –±–æ—Ç - –≤–∞–º –Ω–µ —Å—é–¥–∞."
    ]
    
    await message.reply(random.choice(responses))

@router.message(Command("forget"))
async def cmd_forget(message: Message):
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å."""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
        profile = db_load_person(message.chat.id, message.from_user.id)
        
        if not profile:
            responses = [
                "–î–∞ —è —Ç–µ–±—è –∏ —Ç–∞–∫ –Ω–µ –ø–æ–º–Ω—é –æ—Å–æ–±–æ.",
                "–ó–∞–±—ã—Ç—å —Ç–µ–±—è? –¢–∞–∫ —Ç—ã —É–∂–µ –Ω–∏–∫—Ç–æ –¥–ª—è –º–µ–Ω—è.",
                "–ö–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∑–∞–±—ã—Ç—å? –£ –º–µ–Ω—è –ø—Ä–æ —Ç–µ–±—è –∏ —Ç–∞–∫ –ø—É—Å—Ç–æ."
            ]
            await message.reply(random.choice(responses))
            return
        
        # –û—á–∏—â–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç–æ–π)
        empty_profile = {}
        db_save_person(message.chat.id, message.from_user.id, empty_profile)
        
        responses = [
            "–ì–æ—Ç–æ–≤–æ, —Å—Ç—ë—Ä —Ç–µ–±—è –∏–∑ –ø–∞–º—è—Ç–∏. –¢–µ–ø–µ—Ä—å –º—ã –Ω–µ –∑–Ω–∞–∫–æ–º—ã.",
            "–ó–∞–±—ã–ª. –•–æ—Ç—è —á–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è, –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ—Å–æ–±–æ –Ω–µ—á–µ–≥–æ –±—ã–ª–æ.",
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞. –ù–∞—á–∏–Ω–∞–µ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞.",
            "–í—Å—ë —Å—Ç—ë—Ä—Ç–æ. –¢–µ–ø–µ—Ä—å —Ç—ã –¥–ª—è –º–µ–Ω—è –ø—Ä–æ—Å—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π –∞–Ω–æ–Ω."
        ]
        
        await message.reply(random.choice(responses))
        
    except Exception as e:
        await message.reply("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")

@router.message(Command("me"))
async def cmd_me(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è /who)."""
    if message.chat.type == "private":
        await message.reply("–í –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —è –ø—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –≤–µ–¥—É.")
        return
    
    try:
        profile = get_user_profile_for_display(
            message.chat.id,
            message.from_user.id, 
            message.from_user
        )
        
        if not any(profile.values()):
            responses = [
                "–ü–æ–∫–∞ –ø—Ä–æ —Ç–µ–±—è –∑–Ω–∞—é –Ω–µ–º–Ω–æ–≥–æ. –ü–æ–æ–±—â–∞–µ–º—Å—è - —É–∑–Ω–∞—é –±–æ–ª—å—à–µ.",
                "–¢—ã –¥–ª—è –º–µ–Ω—è –ø–æ–∫–∞ –∑–∞–≥–∞–¥–∫–∞. –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ —Å–µ–±–µ.",
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–∞–ª–æ–≤–∞—Ç–æ. –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!"
            ]
            await message.reply(random.choice(responses))
            return
        
        text_parts = []
        
        if profile.get('name'):
            text_parts.append(f"–ó–æ–≤—É —Ç–µ–±—è: {profile['name']}")
        
        if profile.get('likes') and profile['likes'] != "‚Äî":
            text_parts.append(f"–õ—é–±–∏—à—å: {profile['likes']}")
            
        if profile.get('dislikes') and profile['dislikes'] != "‚Äî":
            text_parts.append(f"–ù–µ –ª—é–±–∏—à—å: {profile['dislikes']}")
        
        if profile.get('tone'):
            tone_desc = {
                "–¥—Ä—É–∂–µ–ª—é–±–Ω–æ": "–¥—Ä—É–∂–µ—Å–∫–∏",
                "–∫–æ–ª–∫–æ": "—Å –ø–æ–¥–∫–æ–≤—ã—Ä–∫–æ–π", 
                "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ": "–±–µ–∑ –æ—Å–æ–±—ã—Ö —ç–º–æ—Ü–∏–π"
            }
            text_parts.append(f"–ö–æ –º–Ω–µ –æ—Ç–Ω–æ—Å–∏—à—å—Å—è {tone_desc.get(profile['tone'], profile['tone'])}")
        
        if text_parts:
            response = "–í–æ—Ç —á—Ç–æ —è –ø—Ä–æ —Ç–µ–±—è –ø–æ–º–Ω—é:\n" + "\n".join([f"‚Ä¢ {part}" for part in text_parts])
        else:
            response = "–ü–æ–∫–∞ –ø—Ä–æ —Ç–µ–±—è –Ω–∏—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –Ω–µ –∑–Ω–∞—é."
        
        await message.reply(response)
        
    except Exception as e:
        await message.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.")

@router.message(Command("mood"))
async def cmd_mood(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –±–æ—Ç–∞."""
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    system_profile = db_load_person(message.chat.id, 0) or {}
    bot_mode = system_profile.get("bot_mode", "toxic")
    
    mood_responses = {
        "toxic": [
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? –û—Ç–ª–∏—á–Ω–æ–µ! –ì–æ—Ç–æ–≤ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –ø–æ—Ç—Ä–æ–ª–ª–∏—Ç—å.",
            "–°–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω–æ —è–∑–≤–∏—Ç–µ–ª—å–Ω—ã–π. –ë–µ—Ä–µ–≥–∏—Ç–µ—Å—å!",
            "–í —É–¥–∞—Ä–µ! –®—É—Ç–∫–∏ –±—É–¥—É—Ç –æ—Å–æ–±–µ–Ω–Ω–æ –∫–æ–ª–∫–∏–º–∏.",
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –±–æ–µ–≤–æ–µ. –ö—Ç–æ —Ö–æ—á–µ—Ç –ø–æ—Å–ø–æ—Ä–∏—Ç—å?"
        ],
        "friendly": [
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –∏ –ø–æ–±–æ–ª—Ç–∞—Ç—å.",
            "–°–µ–≥–æ–¥–Ω—è –¥–æ–±—Ä—ã–π –¥–µ–Ω—å, —Ö–æ—á–µ—Ç—Å—è –≤—Å–µ—Ö –æ–±–Ω—è—Ç—å!",
            "–ü–æ–∑–∏—Ç–∏–≤–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –î–∞–≤–∞–π—Ç–µ –æ–±—â–∞—Ç—å—Å—è.",
            "–•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?"
        ],
        "neutral": [
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ. –†–∞–±–æ—Ç–∞—é –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ.",
            "–û–±—ã—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ù–∏ —Ö–æ—Ä–æ—à–æ, –Ω–∏ –ø–ª–æ—Ö–æ.",
            "–°—Ç–∞–±–∏–ª—å–Ω–æ. –ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é.",
            "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ß—Ç–æ –æ–±—Å—É–∂–¥–∞–µ–º?"
        ],
        "silent": [
            "...",
            "–¢—Å-—Å-—Å.",
            "–†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã.",
            "*–º–æ–ª—á–∏—Ç*"
        ]
    }
    
    responses = mood_responses.get(bot_mode, mood_responses["toxic"])
    await message.reply(random.choice(responses))

@router.message(Command("ask"))
async def cmd_ask(message: Message):
    """–ó–∞–¥–∞—Ç—å –ø—Ä—è–º–æ–π –≤–æ–ø—Ä–æ—Å –±–æ—Ç—É."""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–æ–ø—Ä–æ—Å –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        question = message.text[4:].strip() if len(message.text) > 4 else ""
        
        if not question:
            responses = [
                "–ê –≤–æ–ø—Ä–æ—Å –≥–¥–µ? –ù–µ —Ç–µ–ª–µ–ø–∞—Ç –∂–µ —è.",
                "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –≥–µ–Ω–∏–π.",
                "–ß—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å —Ö–æ—Ç–µ–ª? –ò—Å–ø–æ–ª—å–∑—É–π: /ask —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å"
            ]
            await message.reply(random.choice(responses))
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ LLM
        prompt = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç: {question}\n–û—Ç–≤–µ—Ç—å –≤ —Å–≤–æ–µ–º —Ç–æ–∫—Å–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ, –Ω–æ –ø–æ —Å—É—â–µ—Å—Ç–≤—É."
        
        response = await llm_text(prompt, max_tokens=150)
        
        if response:
            await message.reply(response)
        else:
            await message.reply("–•–º, —á—Ç–æ-—Ç–æ —è –∑–∞–≤–∏—Å. –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å.")
            
    except Exception as e:
        await message.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

@router.message(Command("random"))
async def cmd_random(message: Message):
    """–°–ª—É—á–∞–π–Ω–∞—è —Ñ—Ä–∞–∑–∞ –æ—Ç –±–æ—Ç–∞."""
    random_phrases = [
        "–ñ–∏–∑–Ω—å - —à—Ç—É–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è, –Ω–æ –Ω–µ–¥–æ–ª–≥–∞—è.",
        "–õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –±—É–¥—É—â–µ–µ - —ç—Ç–æ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ. –ò–ª–∏ —Ä–∞–∑—Ä—É—à–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–µ.",
        "–û–ø—Ç–∏–º–∏—Å—Ç –≤–∏–¥–∏—Ç —Å—Ç–∞–∫–∞–Ω –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É –ø–æ–ª–Ω—ã–º. –ü–µ—Å—Å–∏–º–∏—Å—Ç - –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É –ø—É—Å—Ç—ã–º. –†–µ–∞–ª–∏—Å—Ç –ø—Ä–æ—Å—Ç–æ –ø—å–µ—Ç.",
        "–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –∏—Ö –ø–æ–±–µ–¥–∏—Ç—å - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è. –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è - —Ç—Ä–æ–ª—å –∏—Ö.",
        "–°—á–∞—Å—Ç—å–µ –Ω–µ –≤ –¥–µ–Ω—å–≥–∞—Ö, –∞ –≤ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ.",
        "–ò–¥–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π –Ω–µ—Ç. –ï—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ, –∫—Ç–æ –µ—â–µ –Ω–µ –ø–æ–∫–∞–∑–∞–ª —Å–≤–æ—é —Å—É—â–Ω–æ—Å—Ç—å.",
        "–°–∞—Ä–∫–∞–∑–º - —ç—Ç–æ —Å–ø–æ—Å–æ–± –¥–∞—Ä–∏—Ç—å –ª—é–¥—è–º –º—É–¥—Ä–æ—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ.",
        "–ò–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –º–æ–ª—á–∞—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –¥—É—Ä–∞–∫–æ–º, —á–µ–º –∑–∞–≥–æ–≤–æ—Ä–∏—Ç—å –∏ —Ä–∞–∑–≤–µ—è—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è.",
        "–ö—Ä–∏—Ç–∏–∫–∞ - —ç—Ç–æ –∫–æ–≥–¥–∞ —Ç–µ–±–µ –≥–æ–≤–æ—Ä—è—Ç –ø—Ä–∞–≤–¥—É, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –Ω–µ —Ö–æ—á–µ—à—å —Å–ª—ã—à–∞—Ç—å.",
        "–ù–µ –≤—Å–µ –≥–µ—Ä–æ–∏ –Ω–æ—Å—è—Ç –ø–ª–∞—â–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–µ—É–¥–æ–±–Ω—É—é –ø—Ä–∞–≤–¥—É."
    ]
    
    await message.reply(random.choice(random_phrases))

@router.message(Command("stats"))
async def cmd_stats_public(message: Message):
    """–ü—É–±–ª–∏—á–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è)."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        history = db_get_chat_tail(message.chat.id, limit=100)
        
        if not history:
            await message.reply("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–∫–∞ –Ω–µ—Ç, —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π.")
            return
        
        total_messages = len(history)
        unique_users = len(set(msg.get('user_id') for msg in history if msg.get('user_id')))
        
        # –ü—Ä–æ—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏
        current_time = time.time()
        day_ago = current_time - 24 * 3600
        week_ago = current_time - 7 * 24 * 3600
        
        day_messages = len([m for m in history if m.get('timestamp', 0) > day_ago])
        week_messages = len([m for m in history if m.get('timestamp', 0) > week_ago])
        
        text = (
            f"üìä –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞:\n"
            f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 100): {total_messages}\n"
            f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {unique_users}\n"
            f"üìÖ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å: {day_messages}\n"
            f"üìà –ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é: {week_messages}"
        )
        
        await message.reply(text)
        
    except Exception as e:
        await message.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –±–æ—Ç–∞
@router.message(F.text.contains("@") | F.text.contains("–ª–µ—Ö–∞") | F.text.contains("–ª—ë—Ö–∞"))
async def handle_mentions(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö."""
    if message.chat.type == "private":
        return  # –í –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö –Ω–µ –Ω—É–∂–Ω–æ
    
    text = (message.text or "").lower()
    bot_username = (await message.bot.get_me()).username
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º–∏–Ω–∞—é—Ç –ª–∏ –±–æ—Ç–∞
    mentioned = False
    
    if f"@{bot_username}" in text:
        mentioned = True
    elif any(keyword in text for keyword in ["–ª–µ—Ö–∞", "–ª—ë—Ö–∞", "–±–æ—Ç"]):
        mentioned = True
    
    if not mentioned:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –±–æ—Ç–∞
    system_profile = db_load_person(message.chat.id, 0) or {}
    bot_mode = system_profile.get("bot_mode", "toxic")
    
    if bot_mode == "silent":
        return  # –í —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        prompt = f"–¢–µ–±—è —É–ø–æ–º—è–Ω—É–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏: '{message.text}'\n–û—Ç–≤–µ—Ç—å –∫–æ—Ä–æ—Ç–∫–æ –≤ —Å–≤–æ–µ–º —Å—Ç–∏–ª–µ."
        
        response = await llm_text(prompt, max_tokens=100)
        
        if response:
            await message.reply(response)
            
    except Exception:
        # –ï—Å–ª–∏ LLM –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        mention_responses = [
            "–ß—Ç–æ —Ö–æ—Ç–µ–ª?",
            "–°–ª—É—à–∞—é.",
            "–î–∞, —è —Ç—É—Ç.",
            "–ß—ë –Ω–∞–¥–æ?",
            "–ó–æ–≤—É - –æ—Ç–≤–µ—á–∞—é."
        ]
        await message.reply(random.choice(mention_responses))
